/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package uk.co.kleindelao.demo.henrys.basket;

import static java.math.BigDecimal.ZERO;
import static java.math.RoundingMode.HALF_UP;

import com.google.common.annotations.VisibleForTesting;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.List;

public class ShoppingProcess {
  private final LocalDate date;
  private final Catalogue catalogue;
  private final ShoppingItem soup;
  private final ShoppingItem bread;
  private final ShoppingItem apples;
  private final ShoppingBasket basket;

  public ShoppingProcess(final LocalDate date) {
    this.date = date;
    this.basket = new ShoppingBasket();
    soup = shoppingItem("soup", "tin", "0.65");
    bread = shoppingItem("bread", "loaf", "0.8");
    apples = shoppingItem("apples", "single", "0.1");
    catalogue = new Catalogue(
        List.of(soup, bread,
            shoppingItem("milk", "bottle", "1.3"), apples));
  }

  private static ShoppingItem shoppingItem(final String name, final String unit,
                                           final String costValue) {
    return new ShoppingItem(name, unit, new BigDecimal(costValue));
  }

  @VisibleForTesting
  Catalogue getCatalogue() {
    return catalogue;
  }

  @VisibleForTesting
  ShoppingBasket getBasket() {
    return basket;
  }

  public void addItems(final int catalogueIndex, final int numberOfItems) {
    basket.addItems(numberOfItems, catalogue.getItem(catalogueIndex));
  }

  public BigDecimal getTotalPrice() {
    return basket.getContent()
                 .entrySet()
                 .stream()
                 .map(entry -> entry.getKey()
                                    .cost()
                                    .multiply(BigDecimal.valueOf(entry.getValue())))
                 .reduce(BigDecimal::add)
                 .orElse(ZERO)
                 .setScale(2, HALF_UP);
  }
}
